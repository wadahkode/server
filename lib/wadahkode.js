"use strict";
var app = require('./app'), wadahkode = function () {
    app.handle = function (req, res) {
        var route = app.route(req);
        if (req.method == 'GET') {
            route.get(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
        else if (req.method == 'POST') {
            route.post(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
    };
    app.register = {};
    app.Router = {
        get: function (path, callback) { return app.get(path, callback); },
        post: function (path, callback) { return app.post(path, callback); },
    };
    app.Client = {
        initialize: function (options) {
            var dotenv = require('dotenv');
            return dotenv.config(options);
        },
        connect: function () {
            if (process.env.DB_DRIVER == 'postgres') {
                var Client = require('pg').Client;
                var newClient = new Client({
                    connectionString: process.env.DB_DRIVER + "://" + process.env.DB_USER + ":" + process.env.DB_PASS + "@" + process.env.DB_HOST + ":" + process.env.DB_PORT + "/" + process.env.DB_NAME,
                    ssl: {
                        rejectUnauthorized: false
                    }
                });
                this.db = newClient;
                return this;
            }
            else {
                return false;
            }
        }
    };
    return app;
};
module.exports = wadahkode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FkYWhrb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3dhZGFoa29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQVM1QixTQUFTLEdBQUc7SUFVVixHQUFHLENBQUMsTUFBTSxHQUFHLFVBQUMsR0FBUSxFQUFFLEdBQVE7UUFDOUIsSUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU3QixJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksS0FBSyxFQUFFO1lBQ3ZCLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRXBCLE9BQU8sQ0FBQyxHQUFHLENBQ1QsZ0JBQWdCLEVBQ2hCLEdBQUcsQ0FBQyxNQUFNLEVBQ1YsR0FBRyxDQUFDLFVBQVUsRUFDZCxJQUFJLElBQUksRUFBRSxFQUNWLEdBQUcsQ0FBQyxHQUFHLENBQ1IsQ0FBQztTQUNIO2FBQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtZQUMvQixLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUVyQixPQUFPLENBQUMsR0FBRyxDQUNULGdCQUFnQixFQUNoQixHQUFHLENBQUMsTUFBTSxFQUNWLEdBQUcsQ0FBQyxVQUFVLEVBQ2QsSUFBSSxJQUFJLEVBQUUsRUFDVixHQUFHLENBQUMsR0FBRyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUMsQ0FBQztJQUlGLEdBQUcsQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBRWxCLEdBQUcsQ0FBQyxNQUFNLEdBQUc7UUFDWCxHQUFHLEVBQUUsVUFBQyxJQUFZLEVBQUUsUUFBYSxJQUFLLE9BQUEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLEVBQXZCLENBQXVCO1FBQzdELElBQUksRUFBRSxVQUFDLElBQVksRUFBRSxRQUFhLElBQUssT0FBQSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsRUFBeEIsQ0FBd0I7S0FDaEUsQ0FBQztJQUVGLEdBQUcsQ0FBQyxNQUFNLEdBQUc7UUFDWCxVQUFVLEVBQUUsVUFBUyxPQUFZO1lBQy9CLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUVqQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEMsQ0FBQztRQUNELE9BQU8sRUFBRTtZQUNQLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLElBQUksVUFBVSxFQUFFO2dCQUNoQyxJQUFBLE1BQU0sR0FBSSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQWpCLENBQWtCO2dCQUUvQixJQUFNLFNBQVMsR0FBRyxJQUFJLE1BQU0sQ0FBQztvQkFDM0IsZ0JBQWdCLEVBQUssT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLFdBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLFNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLFNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLFNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLFNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFTO29CQUNqSyxHQUFHLEVBQUU7d0JBQ0gsa0JBQWtCLEVBQUUsS0FBSztxQkFDMUI7aUJBQ0YsQ0FBQyxDQUFDO2dCQUVILElBQUksQ0FBQyxFQUFFLEdBQUcsU0FBUyxDQUFDO2dCQUVwQixPQUFPLElBQUksQ0FBQzthQUNiO2lCQUFNO2dCQUNMLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7UUFDSCxDQUFDO0tBQ0YsQ0FBQztJQUdGLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcCcpLFxyXG4vKipcclxuICogRnVuZ3NpIFdhZGFoa29kZVxyXG4gKiBcclxuICogU2VidWFoIGZ1bmdzaSB5YW5nIGRpZ3VuYWthbiB1bnR1ayBtZW5hbXB1bmcgc2VidWFoIGZ1bmdzaSBsYWluLlxyXG4gKiBcclxuICogQGF1dGhvciB3YWRhaGtvZGUgPG12cC5kZWRlZmlsYXJhc0BnbWFpbC5jb20+XHJcbiAqIEBzaW5jZSB2ZXJzaW9uIDEuMC4wXHJcbiAqL1xyXG53YWRhaGtvZGUgPSAoKSA9PiB7XHJcbiAgLyoqXHJcbiAgICogTWV0b2RlIGF0YXUgcHJvcGVydGkgeWFuZyBkaWd1bmFrYW4ga2V0aWthXHJcbiAgICogd2ViIHNlcnZlciBkaW11YXQgZGVuZ2FuIGFwcC5saXN0ZW4oYXJndW1lbnRzKSxcclxuICAgKiBcclxuICAgKiBTZWNhcmEgb3RvbWF0aXMgbWVuYW1wdW5nIHJlcXVlc3QgZGFuIHJlc3BvbnNlIGRhcmkgc2VydmVyLFxyXG4gICAqIGRhbiBtZW5jYXJpIHJvdXRlciB5YW5nIGNvY29rIGJlcmRhc2Fya2FuIHJlcXVlc3QgbWV0aG9kbnlhLlxyXG4gICAqIFxyXG4gICAqIEBzaW5jZSB2ZXJzaW9uIDEuMC4wXHJcbiAgICovXHJcbiAgYXBwLmhhbmRsZSA9IChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcclxuICAgIGNvbnN0IHJvdXRlID0gYXBwLnJvdXRlKHJlcSk7XHJcbiAgICBcclxuICAgIGlmIChyZXEubWV0aG9kID09ICdHRVQnKSB7XHJcbiAgICAgIHJvdXRlLmdldChyZXEsIHJlcyk7XHJcbiAgICAgIFxyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAn8J+MjyAlcyAlcyAlcyAlcycsXHJcbiAgICAgICAgcmVxLm1ldGhvZCxcclxuICAgICAgICByZXMuc3RhdHVzQ29kZSxcclxuICAgICAgICBuZXcgRGF0ZSgpLFxyXG4gICAgICAgIHJlcS51cmxcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSBpZiAocmVxLm1ldGhvZCA9PSAnUE9TVCcpIHtcclxuICAgICAgcm91dGUucG9zdChyZXEsIHJlcyk7XHJcbiAgICAgIFxyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAn8J+MjyAlcyAlcyAlcyAlcycsXHJcbiAgICAgICAgcmVxLm1ldGhvZCxcclxuICAgICAgICByZXMuc3RhdHVzQ29kZSxcclxuICAgICAgICBuZXcgRGF0ZSgpLFxyXG4gICAgICAgIHJlcS51cmxcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9O1xyXG4gIFxyXG4gIC8vIHVudHVrIG1lbmFtcHVuZyByb3V0ZXJcclxuICAvLyBtaXNhbG55YTogWycvJzogW0Z1bmN0aW9uXV1cclxuICBhcHAucmVnaXN0ZXIgPSB7fTtcclxuICBcclxuICBhcHAuUm91dGVyID0ge1xyXG4gICAgZ2V0OiAocGF0aDogc3RyaW5nLCBjYWxsYmFjazogYW55KSA9PiBhcHAuZ2V0KHBhdGgsIGNhbGxiYWNrKSxcclxuICAgIHBvc3Q6IChwYXRoOiBzdHJpbmcsIGNhbGxiYWNrOiBhbnkpID0+IGFwcC5wb3N0KHBhdGgsIGNhbGxiYWNrKSxcclxuICB9O1xyXG4gIFxyXG4gIGFwcC5DbGllbnQgPSB7XHJcbiAgICBpbml0aWFsaXplOiBmdW5jdGlvbihvcHRpb25zOiBhbnkpIHtcclxuICAgICAgY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gZG90ZW52LmNvbmZpZyhvcHRpb25zKTtcclxuICAgIH0sXHJcbiAgICBjb25uZWN0OiBmdW5jdGlvbigpIHtcclxuICAgICAgaWYgKHByb2Nlc3MuZW52LkRCX0RSSVZFUiA9PSAncG9zdGdyZXMnKSB7XHJcbiAgICAgICAgY29uc3Qge0NsaWVudH0gPSByZXF1aXJlKCdwZycpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IG5ld0NsaWVudCA9IG5ldyBDbGllbnQoe1xyXG4gICAgICAgICAgY29ubmVjdGlvblN0cmluZzogYCR7cHJvY2Vzcy5lbnYuREJfRFJJVkVSfTovLyR7cHJvY2Vzcy5lbnYuREJfVVNFUn06JHtwcm9jZXNzLmVudi5EQl9QQVNTfUAke3Byb2Nlc3MuZW52LkRCX0hPU1R9OiR7cHJvY2Vzcy5lbnYuREJfUE9SVH0vJHtwcm9jZXNzLmVudi5EQl9OQU1FfWAsXHJcbiAgICAgICAgICBzc2w6IHtcclxuICAgICAgICAgICAgcmVqZWN0VW5hdXRob3JpemVkOiBmYWxzZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuZGIgPSBuZXdDbGllbnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuICBcclxuICAvLyBLZW1iYWxpa2FuXHJcbiAgcmV0dXJuIGFwcDtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gd2FkYWhrb2RlOyJdfQ==