"use strict";
var http = require('http');
var app = require('./app'), wadahkode = function () {
    app.handle = function (req, res) {
        var route = app.route(req);
        if (req.method == 'GET') {
            route.get(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
        else if (req.method == 'POST') {
            route.post(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
    };
    app.register = {};
    app.Router = {
        get: function (path, callback) { return app.get(path, callback); },
        post: function (path, callback) { return app.post(path, callback); },
    };
    app.Client = require('./client');
    return app;
};
module.exports = wadahkode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FkYWhrb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3dhZGFoa29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBWTdCLElBQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFTNUIsU0FBUyxHQUFHO0lBVVYsR0FBRyxDQUFDLE1BQU0sR0FBRyxVQUFDLEdBQWdDLEVBQUUsR0FBK0I7UUFDN0UsSUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU3QixJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksS0FBSyxFQUFFO1lBQ3ZCLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRXBCLE9BQU8sQ0FBQyxHQUFHLENBQ1QsZ0JBQWdCLEVBQ2hCLEdBQUcsQ0FBQyxNQUFNLEVBQ1YsR0FBRyxDQUFDLFVBQVUsRUFDZCxJQUFJLElBQUksRUFBRSxFQUNWLEdBQUcsQ0FBQyxHQUFHLENBQ1IsQ0FBQztTQUNIO2FBQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtZQUMvQixLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUVyQixPQUFPLENBQUMsR0FBRyxDQUNULGdCQUFnQixFQUNoQixHQUFHLENBQUMsTUFBTSxFQUNWLEdBQUcsQ0FBQyxVQUFVLEVBQ2QsSUFBSSxJQUFJLEVBQUUsRUFDVixHQUFHLENBQUMsR0FBRyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUMsQ0FBQztJQUlGLEdBQUcsQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBRWxCLEdBQUcsQ0FBQyxNQUFNLEdBQUc7UUFDWCxHQUFHLEVBQUUsVUFBQyxJQUFZLEVBQUUsUUFBa0IsSUFBSyxPQUFBLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxFQUF2QixDQUF1QjtRQUNsRSxJQUFJLEVBQUUsVUFBQyxJQUFZLEVBQUUsUUFBa0IsSUFBSyxPQUFBLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxFQUF4QixDQUF3QjtLQUNyRSxDQUFDO0lBRUYsR0FBRyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFHakMsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XHJcbi8qKlxyXG4gKiBVc2UgVHlwZVxyXG4gKiBcclxuICogQHNpbmNlIHZlcnNpb24gMS4xLjhcclxuICovXHJcbnR5cGUgY2FsbGJhY2sgPSAocmVxdWVzdDogdHlwZW9mIGh0dHAuSW5jb21pbmdNZXNzYWdlLCByZXNwb25zZTogdHlwZW9mIGh0dHAuU2VydmVyUmVzcG9uc2UpID0+IHZvaWRcclxudHlwZSBSb3V0ZXIgPSB7XHJcbiAgZ2V0OiAocGF0aDogc3RyaW5nLCBjYWxsYmFjazogY2FsbGJhY2spID0+IHZvaWQsXHJcbiAgcG9zdDogKHBhdGg6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrKSA9PiB2b2lkXHJcbn1cclxuXHJcbmNvbnN0IGFwcCA9IHJlcXVpcmUoJy4vYXBwJyksXHJcbi8qKlxyXG4gKiBGdW5nc2kgV2FkYWhrb2RlXHJcbiAqIFxyXG4gKiBTZWJ1YWggZnVuZ3NpIHlhbmcgZGlndW5ha2FuIHVudHVrIG1lbmFtcHVuZyBzZWJ1YWggZnVuZ3NpIGxhaW4uXHJcbiAqIFxyXG4gKiBAYXV0aG9yIHdhZGFoa29kZSA8bXZwLmRlZGVmaWxhcmFzQGdtYWlsLmNvbT5cclxuICogQHNpbmNlIHZlcnNpb24gMS4wLjBcclxuICovXHJcbndhZGFoa29kZSA9ICgpID0+IHtcclxuICAvKipcclxuICAgKiBNZXRvZGUgYXRhdSBwcm9wZXJ0aSB5YW5nIGRpZ3VuYWthbiBrZXRpa2FcclxuICAgKiB3ZWIgc2VydmVyIGRpbXVhdCBkZW5nYW4gYXBwLmxpc3Rlbihhcmd1bWVudHMpLFxyXG4gICAqIFxyXG4gICAqIFNlY2FyYSBvdG9tYXRpcyBtZW5hbXB1bmcgcmVxdWVzdCBkYW4gcmVzcG9uc2UgZGFyaSBzZXJ2ZXIsXHJcbiAgICogZGFuIG1lbmNhcmkgcm91dGVyIHlhbmcgY29jb2sgYmVyZGFzYXJrYW4gcmVxdWVzdCBtZXRob2RueWEuXHJcbiAgICogXHJcbiAgICogQHNpbmNlIHZlcnNpb24gMS4wLjBcclxuICAgKi9cclxuICBhcHAuaGFuZGxlID0gKHJlcTogdHlwZW9mIGh0dHAuSW5jb21pbmdNZXNzYWdlLCByZXM6IHR5cGVvZiBodHRwLlNlcnZlclJlc3BvbnNlKSA9PiB7XHJcbiAgICBjb25zdCByb3V0ZSA9IGFwcC5yb3V0ZShyZXEpO1xyXG4gICAgXHJcbiAgICBpZiAocmVxLm1ldGhvZCA9PSAnR0VUJykge1xyXG4gICAgICByb3V0ZS5nZXQocmVxLCByZXMpO1xyXG4gICAgICBcclxuICAgICAgY29uc29sZS5sb2coXHJcbiAgICAgICAgJ/CfjI8gJXMgJXMgJXMgJXMnLFxyXG4gICAgICAgIHJlcS5tZXRob2QsXHJcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUsXHJcbiAgICAgICAgbmV3IERhdGUoKSxcclxuICAgICAgICByZXEudXJsXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT0gJ1BPU1QnKSB7XHJcbiAgICAgIHJvdXRlLnBvc3QocmVxLCByZXMpO1xyXG4gICAgICBcclxuICAgICAgY29uc29sZS5sb2coXHJcbiAgICAgICAgJ/CfjI8gJXMgJXMgJXMgJXMnLFxyXG4gICAgICAgIHJlcS5tZXRob2QsXHJcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUsXHJcbiAgICAgICAgbmV3IERhdGUoKSxcclxuICAgICAgICByZXEudXJsXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBcclxuICAvLyB1bnR1ayBtZW5hbXB1bmcgcm91dGVyXHJcbiAgLy8gbWlzYWxueWE6IFsnLyc6IFtGdW5jdGlvbl1dXHJcbiAgYXBwLnJlZ2lzdGVyID0ge307XHJcbiAgXHJcbiAgYXBwLlJvdXRlciA9IHtcclxuICAgIGdldDogKHBhdGg6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrKSA9PiBhcHAuZ2V0KHBhdGgsIGNhbGxiYWNrKSxcclxuICAgIHBvc3Q6IChwYXRoOiBzdHJpbmcsIGNhbGxiYWNrOiBjYWxsYmFjaykgPT4gYXBwLnBvc3QocGF0aCwgY2FsbGJhY2spLFxyXG4gIH07XHJcbiAgXHJcbiAgYXBwLkNsaWVudCA9IHJlcXVpcmUoJy4vY2xpZW50Jyk7XHJcbiAgXHJcbiAgLy8gS2VtYmFsaWthblxyXG4gIHJldHVybiBhcHA7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHdhZGFoa29kZTsiXX0=