"use strict";
var http = require('http');
var app = require('./app'), wadahkode = function () {
    app.handle = function (req, res) {
        var route = app.route(req);
        if (req.method == 'GET') {
            route.get(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
        else if (req.method == 'POST') {
            route.post(req, res);
            console.log('üåè %s %s %s %s', req.method, res.statusCode, new Date(), req.url);
        }
    };
    app.register = {};
    app.Router = {
        get: function (path, callback) { return app.get(path, callback); },
        post: function (path, callback) { return app.post(path, callback); },
    };
    app.Client = require('./client');
    return app;
};
module.exports = wadahkode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FkYWhrb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3dhZGFoa29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBZTdCLElBQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFTMUIsU0FBUyxHQUFHO0lBVVYsR0FBRyxDQUFDLE1BQU0sR0FBRyxVQUNYLEdBQWdDLEVBQ2hDLEdBQStCO1FBRS9CLElBQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0IsSUFBSSxHQUFHLENBQUMsTUFBTSxJQUFJLEtBQUssRUFBRTtZQUN2QixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUVwQixPQUFPLENBQUMsR0FBRyxDQUNULGdCQUFnQixFQUNoQixHQUFHLENBQUMsTUFBTSxFQUNWLEdBQUcsQ0FBQyxVQUFVLEVBQ2QsSUFBSSxJQUFJLEVBQUUsRUFDVixHQUFHLENBQUMsR0FBRyxDQUNSLENBQUM7U0FDSDthQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxNQUFNLEVBQUU7WUFDL0IsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFFckIsT0FBTyxDQUFDLEdBQUcsQ0FDVCxnQkFBZ0IsRUFDaEIsR0FBRyxDQUFDLE1BQU0sRUFDVixHQUFHLENBQUMsVUFBVSxFQUNkLElBQUksSUFBSSxFQUFFLEVBQ1YsR0FBRyxDQUFDLEdBQUcsQ0FDUixDQUFDO1NBQ0g7SUFDSCxDQUFDLENBQUM7SUFJRixHQUFHLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUVsQixHQUFHLENBQUMsTUFBTSxHQUFHO1FBQ1gsR0FBRyxFQUFFLFVBQUMsSUFBWSxFQUFFLFFBQWtCLElBQUssT0FBQSxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsRUFBdkIsQ0FBdUI7UUFDbEUsSUFBSSxFQUFFLFVBQUMsSUFBWSxFQUFFLFFBQWtCLElBQUssT0FBQSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsRUFBeEIsQ0FBd0I7S0FDckUsQ0FBQztJQUVGLEdBQUcsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBR2pDLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUosTUFBTSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xyXG4vKipcclxuICogVXNlIFR5cGVcclxuICpcclxuICogQHNpbmNlIHZlcnNpb24gMS4xLjhcclxuICovXHJcbnR5cGUgY2FsbGJhY2sgPSAoXHJcbiAgcmVxdWVzdDogdHlwZW9mIGh0dHAuSW5jb21pbmdNZXNzYWdlLFxyXG4gIHJlc3BvbnNlOiB0eXBlb2YgaHR0cC5TZXJ2ZXJSZXNwb25zZVxyXG4pID0+IHZvaWQ7XHJcbnR5cGUgUm91dGVyID0ge1xyXG4gIGdldDogKHBhdGg6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrKSA9PiB2b2lkO1xyXG4gIHBvc3Q6IChwYXRoOiBzdHJpbmcsIGNhbGxiYWNrOiBjYWxsYmFjaykgPT4gdm9pZDtcclxufTtcclxuXHJcbmNvbnN0IGFwcCA9IHJlcXVpcmUoJy4vYXBwJyksXHJcbiAgLyoqXHJcbiAgICogRnVuZ3NpIFdhZGFoa29kZVxyXG4gICAqXHJcbiAgICogU2VidWFoIGZ1bmdzaSB5YW5nIGRpZ3VuYWthbiB1bnR1ayBtZW5hbXB1bmcgc2VidWFoIGZ1bmdzaSBsYWluLlxyXG4gICAqXHJcbiAgICogQGF1dGhvciB3YWRhaGtvZGUgPG12cC5kZWRlZmlsYXJhc0BnbWFpbC5jb20+XHJcbiAgICogQHNpbmNlIHZlcnNpb24gMS4wLjBcclxuICAgKi9cclxuICB3YWRhaGtvZGUgPSAoKSA9PiB7XHJcbiAgICAvKipcclxuICAgICAqIE1ldG9kZSBhdGF1IHByb3BlcnRpIHlhbmcgZGlndW5ha2FuIGtldGlrYVxyXG4gICAgICogd2ViIHNlcnZlciBkaW11YXQgZGVuZ2FuIGFwcC5saXN0ZW4oYXJndW1lbnRzKSxcclxuICAgICAqXHJcbiAgICAgKiBTZWNhcmEgb3RvbWF0aXMgbWVuYW1wdW5nIHJlcXVlc3QgZGFuIHJlc3BvbnNlIGRhcmkgc2VydmVyLFxyXG4gICAgICogZGFuIG1lbmNhcmkgcm91dGVyIHlhbmcgY29jb2sgYmVyZGFzYXJrYW4gcmVxdWVzdCBtZXRob2RueWEuXHJcbiAgICAgKlxyXG4gICAgICogQHNpbmNlIHZlcnNpb24gMS4wLjBcclxuICAgICAqL1xyXG4gICAgYXBwLmhhbmRsZSA9IChcclxuICAgICAgcmVxOiB0eXBlb2YgaHR0cC5JbmNvbWluZ01lc3NhZ2UsXHJcbiAgICAgIHJlczogdHlwZW9mIGh0dHAuU2VydmVyUmVzcG9uc2VcclxuICAgICkgPT4ge1xyXG4gICAgICBjb25zdCByb3V0ZSA9IGFwcC5yb3V0ZShyZXEpO1xyXG5cclxuICAgICAgaWYgKHJlcS5tZXRob2QgPT0gJ0dFVCcpIHtcclxuICAgICAgICByb3V0ZS5nZXQocmVxLCByZXMpO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgICfwn4yPICVzICVzICVzICVzJyxcclxuICAgICAgICAgIHJlcS5tZXRob2QsXHJcbiAgICAgICAgICByZXMuc3RhdHVzQ29kZSxcclxuICAgICAgICAgIG5ldyBEYXRlKCksXHJcbiAgICAgICAgICByZXEudXJsXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09ICdQT1NUJykge1xyXG4gICAgICAgIHJvdXRlLnBvc3QocmVxLCByZXMpO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgICfwn4yPICVzICVzICVzICVzJyxcclxuICAgICAgICAgIHJlcS5tZXRob2QsXHJcbiAgICAgICAgICByZXMuc3RhdHVzQ29kZSxcclxuICAgICAgICAgIG5ldyBEYXRlKCksXHJcbiAgICAgICAgICByZXEudXJsXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyB1bnR1ayBtZW5hbXB1bmcgcm91dGVyXHJcbiAgICAvLyBtaXNhbG55YTogWycvJzogW0Z1bmN0aW9uXV1cclxuICAgIGFwcC5yZWdpc3RlciA9IHt9O1xyXG5cclxuICAgIGFwcC5Sb3V0ZXIgPSB7XHJcbiAgICAgIGdldDogKHBhdGg6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrKSA9PiBhcHAuZ2V0KHBhdGgsIGNhbGxiYWNrKSxcclxuICAgICAgcG9zdDogKHBhdGg6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrKSA9PiBhcHAucG9zdChwYXRoLCBjYWxsYmFjayksXHJcbiAgICB9O1xyXG5cclxuICAgIGFwcC5DbGllbnQgPSByZXF1aXJlKCcuL2NsaWVudCcpO1xyXG5cclxuICAgIC8vIEtlbWJhbGlrYW5cclxuICAgIHJldHVybiBhcHA7XHJcbiAgfTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gd2FkYWhrb2RlO1xyXG4iXX0=