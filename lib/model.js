"use strict";
var Model = Object.create(null);
Model = function (client) {
    Model.db = client;
    Model.db.connect();
    return Model;
};
Model.findAll = function (query, sort, prepend) {
    if (prepend === void 0) { prepend = false; }
    if (prepend && sort.length > 1) {
        var orderBy = void 0, limit = 1, keyword = void 0;
        if (sort.length > 2) {
            orderBy = sort.shift();
            limit = sort.pop();
            keyword = sort.pop();
            query = query + (" ORDER BY " + orderBy + " " + keyword + " LIMIT " + limit);
        }
        else {
            orderBy = sort.shift();
            keyword = sort.pop();
            query = query + (" ORDER BY " + orderBy + " " + keyword);
        }
        return new Promise(function (resolve, reject) { return Model.db.query(query, function (err, snapshot) { return !err ? resolve(snapshot.rows) : reject(err); }); });
    }
    return new Promise(function (resolve, reject) { return Model.db.query(query, function (err, snapshot) { return !err ? resolve(snapshot.rows) : reject(err); }); });
};
Model.findById = function (query, params) { return new Promise(function (resolve, reject) { return Model.db.query(query, params, function (err, snapshot) { return !err ? resolve(snapshot.rows) : reject(err); }); }); };
Model.push = function (query, values) { return new Promise(function (resolve) { return Model.db.query(query, values, function (err) { return resolve(err); }); }); };
Model.update = function (query) { return new Promise(function (resolve) { return Model.db.query(query, function (err) { return resolve(err); }); }); };
Model.delete = function (query) { return new Promise(function (resolve) { return Model.db.query(query, function (err) { return resolve(err); }); }); };
module.exports = Model;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU1BLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7QUFPaEMsS0FBSyxHQUFHLFVBQUMsTUFBa0I7SUFDekIsS0FBSyxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUM7SUFDbEIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUVuQixPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMsQ0FBQztBQVNGLEtBQUssQ0FBQyxPQUFPLEdBQUcsVUFBQyxLQUFhLEVBQUUsSUFBOEIsRUFBRSxPQUF3QjtJQUF4Qix3QkFBQSxFQUFBLGVBQXdCO0lBQ3RGLElBQUksT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQzlCLElBQUksT0FBTyxTQUFrQixFQUMzQixLQUFLLEdBQXFCLENBQUMsRUFDM0IsT0FBTyxTQUFrQixDQUFDO1FBRTVCLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkIsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN2QixLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ25CLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFFckIsS0FBSyxHQUFHLEtBQUssSUFBRyxlQUFhLE9BQU8sU0FBSSxPQUFPLGVBQVUsS0FBTyxDQUFBLENBQUM7U0FDbEU7YUFBTTtZQUNMLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDdkIsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUVyQixLQUFLLEdBQUcsS0FBSyxJQUFHLGVBQWEsT0FBTyxTQUFJLE9BQVMsQ0FBQSxDQUFDO1NBQ25EO1FBQ0QsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNLElBQUssT0FBQSxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsVUFBQyxHQUFvQixFQUFFLFFBQW9CLElBQUssT0FBQSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUEzQyxDQUEyQyxDQUFDLEVBQWxILENBQWtILENBQUMsQ0FBQztLQUM3SjtJQUNELE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTSxJQUFLLE9BQUEsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFVBQUMsR0FBb0IsRUFBRSxRQUFvQixJQUFLLE9BQUEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBM0MsQ0FBMkMsQ0FBQyxFQUFsSCxDQUFrSCxDQUFDLENBQUM7QUFDOUosQ0FBQyxDQUFDO0FBUUYsS0FBSyxDQUFDLFFBQVEsR0FBRyxVQUFDLEtBQWEsRUFBRSxNQUFxQixJQUFLLE9BQUEsSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTSxJQUFLLE9BQUEsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxVQUFDLEdBQW9CLEVBQUUsUUFBb0IsSUFBSyxPQUFBLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQTNDLENBQTJDLENBQUMsRUFBMUgsQ0FBMEgsQ0FBQyxFQUE1SixDQUE0SixDQUFDO0FBUXhOLEtBQUssQ0FBQyxJQUFJLEdBQUcsVUFBQyxLQUFhLEVBQUUsTUFBcUIsSUFBSyxPQUFBLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxVQUFDLEdBQW9CLElBQUssT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQVosQ0FBWSxDQUFDLEVBQXJFLENBQXFFLENBQUMsRUFBN0YsQ0FBNkYsQ0FBQztBQU9ySixLQUFLLENBQUMsTUFBTSxHQUFHLFVBQUMsS0FBYSxJQUFLLE9BQUEsSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsVUFBQyxHQUFvQixJQUFLLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFaLENBQVksQ0FBQyxFQUE3RCxDQUE2RCxDQUFDLEVBQXJGLENBQXFGLENBQUM7QUFPeEgsS0FBSyxDQUFDLE1BQU0sR0FBRyxVQUFDLEtBQWEsSUFBSyxPQUFBLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFVBQUMsR0FBb0IsSUFBSyxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBWixDQUFZLENBQUMsRUFBN0QsQ0FBNkQsQ0FBQyxFQUFyRixDQUFxRixDQUFDO0FBR3hILE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZGVsXHJcbiAqIFxyXG4gKiBAYXV0aG9yIHdhZGFoa29kZSA8bXZwLmRlZGVmaWxhcmFzQGdtYWlsLmNvbT5cclxuICogQHNpbmNlIHZlcnNpb24gMS4xLjhcclxuICovXHJcbmxldCBNb2RlbCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcblxyXG4vKipcclxuICogQ29uc3RydWN0b3Igb3IgRnVuY3Rpb25cclxuICogXHJcbiAqIEByZXR1cm4gTW9kZWxcclxuICovXHJcbk1vZGVsID0gKGNsaWVudDogb2JqZWN0fGFueSkgPT4ge1xyXG4gIE1vZGVsLmRiID0gY2xpZW50O1xyXG4gIE1vZGVsLmRiLmNvbm5lY3QoKTtcclxuXHJcbiAgcmV0dXJuIE1vZGVsO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIE1lbmdhbWJpbCBzZW11YSBkYXRhIGRhcmkgZGF0YWJhc2VcclxuICogXHJcbiAqIEBwYXJhbSBxdWVyeSBzdHJpbmdcclxuICogQHBhcmFtIHNvcnQgYXJyYXl8bnVtYmVyfGFueVxyXG4gKiBAcGFyYW0gcHJlcGVuZCBib29sZWFuXHJcbiAqL1xyXG5Nb2RlbC5maW5kQWxsID0gKHF1ZXJ5OiBzdHJpbmcsIHNvcnQ6IEFycmF5PHN0cmluZ3xudW1iZXJ8YW55PiwgcHJlcGVuZDogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XHJcbiAgaWYgKHByZXBlbmQgJiYgc29ydC5sZW5ndGggPiAxKSB7XHJcbiAgICBsZXQgb3JkZXJCeTogc3RyaW5nfHVuZGVmaW5lZCxcclxuICAgICAgbGltaXQ6IG51bWJlcnx1bmRlZmluZWQgPSAxLFxyXG4gICAgICBrZXl3b3JkOiBzdHJpbmd8dW5kZWZpbmVkO1xyXG5cclxuICAgIGlmIChzb3J0Lmxlbmd0aCA+IDIpIHtcclxuICAgICAgb3JkZXJCeSA9IHNvcnQuc2hpZnQoKTtcclxuICAgICAgbGltaXQgPSBzb3J0LnBvcCgpO1xyXG4gICAgICBrZXl3b3JkID0gc29ydC5wb3AoKTtcclxuICAgICAgXHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkgKyBgIE9SREVSIEJZICR7b3JkZXJCeX0gJHtrZXl3b3JkfSBMSU1JVCAke2xpbWl0fWA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBvcmRlckJ5ID0gc29ydC5zaGlmdCgpO1xyXG4gICAgICBrZXl3b3JkID0gc29ydC5wb3AoKTtcclxuXHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkgKyBgIE9SREVSIEJZICR7b3JkZXJCeX0gJHtrZXl3b3JkfWA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gTW9kZWwuZGIucXVlcnkocXVlcnksIChlcnI6IG9iamVjdHxudWxsfGFueSwgc25hcHNob3Q6IG9iamVjdHxhbnkpID0+ICFlcnIgPyByZXNvbHZlKHNuYXBzaG90LnJvd3MpIDogcmVqZWN0KGVycikpKTtcclxuICB9XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IE1vZGVsLmRiLnF1ZXJ5KHF1ZXJ5LCAoZXJyOiBvYmplY3R8bnVsbHxhbnksIHNuYXBzaG90OiBvYmplY3R8YW55KSA9PiAhZXJyID8gcmVzb2x2ZShzbmFwc2hvdC5yb3dzKSA6IHJlamVjdChlcnIpKSk7XHJcbn07XHJcblxyXG4vKipcclxuICogTWVuZ2FtYmlsIGRhdGEgZGFyaSBkYXRhYmFzZSBiZXJkYXNhcmthbiB1c2VybmFtZSBhdGF1IGVtYWlsXHJcbiAqIFxyXG4gKiBAcGFyYW0gcXVlcnkgc3RyaW5nXHJcbiAqIEBwYXJhbSBwYXJhbXMgYXJyYXlcclxuICovXHJcbk1vZGVsLmZpbmRCeUlkID0gKHF1ZXJ5OiBzdHJpbmcsIHBhcmFtczogQXJyYXk8c3RyaW5nPikgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gTW9kZWwuZGIucXVlcnkocXVlcnksIHBhcmFtcywgKGVycjogb2JqZWN0fG51bGx8YW55LCBzbmFwc2hvdDogb2JqZWN0fGFueSkgPT4gIWVyciA/IHJlc29sdmUoc25hcHNob3Qucm93cykgOiByZWplY3QoZXJyKSkpO1xyXG5cclxuLyoqXHJcbiAqIE1lbnlpbXBhbiBkYXRhIGtlZGFsYW0gZGF0YWJhc2VcclxuICogXHJcbiAqIEBwYXJhbSBxdWVyeSBzdHJpbmdcclxuICogQHBhcmFtIHZhbHVlcyBhcnJheVxyXG4gKi9cclxuTW9kZWwucHVzaCA9IChxdWVyeTogc3RyaW5nLCB2YWx1ZXM6IEFycmF5PHN0cmluZz4pID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gTW9kZWwuZGIucXVlcnkocXVlcnksIHZhbHVlcywgKGVycjogb2JqZWN0fG51bGx8YW55KSA9PiByZXNvbHZlKGVycikpKTtcclxuXHJcbi8qKlxyXG4gKiBNZW1wZXJiYXJ1aSBkYXRhIHlhbmcgdGVyc2ltcGFuIGRpZGF0YWJhc2VcclxuICogXHJcbiAqIEBwYXJhbSBxdWVyeSBzdHJpbmdcclxuICovXHJcbk1vZGVsLnVwZGF0ZSA9IChxdWVyeTogc3RyaW5nKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IE1vZGVsLmRiLnF1ZXJ5KHF1ZXJ5LCAoZXJyOiBvYmplY3R8bnVsbHxhbnkpID0+IHJlc29sdmUoZXJyKSkpO1xyXG5cclxuLyoqXHJcbiAqIE1lbmdoYXB1cyBkYXRhIGRhcmkgZGF0YWJhc2VcclxuICogXHJcbiAqIEBwYXJhbSBxdWVyeSBzdHJpbmdcclxuICovXHJcbk1vZGVsLmRlbGV0ZSA9IChxdWVyeTogc3RyaW5nKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IE1vZGVsLmRiLnF1ZXJ5KHF1ZXJ5LCAoZXJyOiBvYmplY3R8bnVsbHxhbnkpID0+IHJlc29sdmUoZXJyKSkpO1xyXG5cclxuLy8gRXhwb3J0IE1vZGVsXHJcbm1vZHVsZS5leHBvcnRzID0gTW9kZWw7Il19