"use strict";
var dotenv = require('dotenv');
var model = require('./model');
var initialize = function (options) { return dotenv.config(options); };
var connect = function () {
    if (process.env.DB_DRIVER == 'postgres') {
        var Client = require('pg').Client;
        var newClient = new Client({
            connectionString: process.env.DB_DRIVER + "://" + process.env.DB_USER + ":" + process.env.DB_PASS + "@" + process.env.DB_HOST + ":" + process.env.DB_PORT + "/" + process.env.DB_NAME,
            ssl: false
        });
        return new model(newClient);
    }
    else {
        return false;
    }
};
module.exports = {
    connect: connect,
    initialize: initialize
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQU9qQyxJQUFNLFVBQVUsR0FBRyxVQUFDLE9BQW1CLElBQUssT0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUF0QixDQUFzQixDQUFDO0FBRW5FLElBQU0sT0FBTyxHQUFHO0lBQ2QsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxVQUFVLEVBQUU7UUFDaEMsSUFBQSxNQUFNLEdBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFqQixDQUFrQjtRQUUvQixJQUFNLFNBQVMsR0FBRyxJQUFJLE1BQU0sQ0FBQztZQUMzQixnQkFBZ0IsRUFBSyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsV0FBTSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sU0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sU0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sU0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sU0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQVM7WUFDakssR0FBRyxFQUFFLEtBQUs7U0FJWCxDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQzdCO1NBQU07UUFDTCxPQUFPLEtBQUssQ0FBQztLQUNkO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE9BQU8sR0FBRztJQUNmLE9BQU8sU0FBQTtJQUNQLFVBQVUsWUFBQTtDQUNYLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuY29uc3QgbW9kZWwgPSByZXF1aXJlKCcuL21vZGVsJyk7XHJcbi8qKlxyXG4gKiBDbGllbnQgZm9yIGRhdGFiYXNlXHJcbiAqIFxyXG4gKiBAYXV0aG9yIHdhZGFoa29kZSA8bXZwLmRlZGVmaWxhcmFzQGdtYWlsLmNvbT5cclxuICogQHNpbmNlIHZlcnNpb24gMS4xLjZcclxuICovXHJcbmNvbnN0IGluaXRpYWxpemUgPSAob3B0aW9uczogb2JqZWN0fGFueSkgPT4gZG90ZW52LmNvbmZpZyhvcHRpb25zKTtcclxuXHJcbmNvbnN0IGNvbm5lY3QgPSBmdW5jdGlvbigpIHtcclxuICBpZiAocHJvY2Vzcy5lbnYuREJfRFJJVkVSID09ICdwb3N0Z3JlcycpIHtcclxuICAgIGNvbnN0IHtDbGllbnR9ID0gcmVxdWlyZSgncGcnKTtcclxuICAgIFxyXG4gICAgY29uc3QgbmV3Q2xpZW50ID0gbmV3IENsaWVudCh7XHJcbiAgICAgIGNvbm5lY3Rpb25TdHJpbmc6IGAke3Byb2Nlc3MuZW52LkRCX0RSSVZFUn06Ly8ke3Byb2Nlc3MuZW52LkRCX1VTRVJ9OiR7cHJvY2Vzcy5lbnYuREJfUEFTU31AJHtwcm9jZXNzLmVudi5EQl9IT1NUfToke3Byb2Nlc3MuZW52LkRCX1BPUlR9LyR7cHJvY2Vzcy5lbnYuREJfTkFNRX1gLFxyXG4gICAgICBzc2w6IGZhbHNlXHJcbiAgICAgIC8vIHNzbDoge1xyXG4gICAgICAvLyAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2VcclxuICAgICAgLy8gfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBtb2RlbChuZXdDbGllbnQpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgY29ubmVjdCxcclxuICBpbml0aWFsaXplXHJcbn07Il19